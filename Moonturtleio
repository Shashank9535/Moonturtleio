import React, { useState, useEffect, useRef } from 'react'
import { motion, useAnimation, AnimatePresence } from 'framer-motion'
import { useSpring, animated } from 'react-spring'
import { Line } from 'react-chartjs-2'
import anime from 'animejs/lib/anime.es.js'
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js'
import { Moon, Sun, ChevronDown, Menu, X, Play, Pause, RotateCcw, Zap, Box, Layers, Activity } from 'lucide-react'

ChartJS.register(
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend
)

const chartOptions = {
  responsive: true,
  animation: {
    duration: 2000,
    easing: 'easeInOutQuart',
  },
  scales: {
    x: {
      type: 'category' as const,
    },
    y: {
      type: 'linear' as const,
      beginAtZero: true,
    },
  },
  plugins: {
    legend: {
      position: 'top' as const,
    },
    title: {
      display: true,
      text: 'App Performance',
    },
  },
}

const chartData = {
  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
  datasets: [
    {
      label: 'Users',
      data: [0, 1000, 5000, 2000, 8000, 15000, 30000],
      borderColor: 'rgb(255, 99, 132)',
      backgroundColor: 'rgba(255, 99, 132, 0.5)',
    },
    {
      label: 'Revenue',
      data: [0, 500, 2000, 1000, 4000, 7500, 15000],
      borderColor: 'rgb(53, 162, 235)',
      backgroundColor: 'rgba(53, 162, 235, 0.5)',
    },
  ],
}

export default function LandingPage() {
  const [isDarkMode, setIsDarkMode] = useState(false)
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const [activeFeature, setActiveFeature] = useState(0)
  const [isPlaying, setIsPlaying] = useState(true)
  const chartRef = useRef(null)
  const controls = useAnimation()
  const heroRef = useRef(null)
  const featuresRef = useRef(null)
  const demoRef = useRef(null)
  const pricingRef = useRef(null)

  const features = [
    { icon: <Box className="w-6 h-6" />, title: 'Drag-and-Drop Builder', description: 'Create stunning web apps with ease' },
    { icon: <Layers className="w-6 h-6" />, title: 'Animated Workflows', description: 'Build complex logic with simple animations' },
    { icon: <Zap className="w-6 h-6" />, title: 'Responsive Animations', description: 'Seamless experiences across all devices' },
    { icon: <Activity className="w-6 h-6" />, title: 'Live Preview', description: 'See your changes in real-time' },
  ]

  const logoProps = useSpring({
    loop: { reverse: true },
    from: { transform: 'scale(1) rotate(0deg)' },
    to: { transform: 'scale(1.1) rotate(5deg)' },
    config: { duration: 2000 },
  })

  useEffect(() => {
    const interval = setInterval(() => {
      if (isPlaying) {
        setActiveFeature((prev) => (prev + 1) % features.length)
      }
    }, 5000)

    return () => clearInterval(interval)
  }, [isPlaying, features.length])

  useEffect(() => {
    controls.start({
      opacity: 1,
      y: 0,
      transition: { duration: 0.5, ease: 'easeOut' },
    })
  }, [activeFeature, controls])

  useEffect(() => {
    // Animate hero section
    anime({
      targets: heroRef.current.querySelectorAll('.hero-animate'),
      translateY: [-50, 0],
      opacity: [0, 1],
      delay: anime.stagger(200),
      easing: 'easeOutQuad',
      duration: 1000,
    })

    // Animate features
    anime({
      targets: featuresRef.current.querySelectorAll('.feature-card'),
      scale: [0.9, 1],
      opacity: [0, 1],
      delay: anime.stagger(200),
      easing: 'easeOutElastic(1, .5)',
      duration: 1000,
    })

    // Animate demo section
    anime({
      targets: demoRef.current,
      translateY: [50, 0],
      opacity: [0, 1],
      easing: 'easeOutQuad',
      duration: 1000,
    })

    // Animate pricing cards
    anime({
      targets: pricingRef.current.querySelectorAll('.pricing-card'),
      translateY: [50, 0],
      opacity: [0, 1],
      delay: anime.stagger(200),
      easing: 'easeOutQuad',
      duration: 1000,
    })
  }, [])

  const toggleDarkMode = () => {
    setIsDarkMode(!isDarkMode)
    document.documentElement.classList.toggle('dark')
  }

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen)
    anime({
      targets: '.menu-item',
      translateY: isMenuOpen ? [0, -20] : [-20, 0],
      opacity: isMenuOpen ? [1, 0] : [0, 1],
      delay: anime.stagger(100),
      easing: 'easeOutQuad',
      duration: 300,
    })
  }

  return (
    <div className={`min-h-screen ${isDarkMode ? 'dark' : ''}`}>
      <div className="bg-gradient-to-br from-blue-100 to-purple-100 dark:from-gray-900 dark:to-blue-900 text-gray-900 dark:text-white">
        {/* Animated background */}
        <div className="fixed inset-0 z-0">
          <div className="absolute inset-0 bg-gradient-to-br from-blue-100 to-purple-100 dark:from-gray-900 dark:to-blue-900" />
          <div className="absolute inset-0 opacity-50">
            {[...Array(20)].map((_, i) => (
              <div
                key={i}
                className="absolute rounded-full bg-white dark:bg-blue-500"
                style={{
                  left: `${Math.random() * 100}%`,
                  top: `${Math.random() * 100}%`,
                  width: `${Math.random() * 20 + 5}px`,
                  height: `${Math.random() * 20 + 5}px`,
                  animation: `float ${Math.random() * 10 + 5}s ease-in-out infinite`,
                }}
              />
            ))}
          </div>
        </div>

        {/* Content */}
        <div className="relative z-10">
          {/* Header */}
          <header className="fixed top-0 left-0 right-0 z-50 bg-white bg-opacity-90 dark:bg-gray-900 dark:bg-opacity-90 shadow-md backdrop-blur-md">
            <div className="container mx-auto px-4 py-4 flex justify-between items-center">
              <animated.div style={logoProps} className="text-2xl font-bold">
                Moonturtleio
              </animated.div>
              <nav className="hidden md:flex space-x-4">
                <a href="#features" className="hover:text-blue-500 transition-colors duration-200">Features</a>
                <a href="#demo" className="hover:text-blue-500 transition-colors duration-200">Demo</a>
                <a href="#pricing" className="hover:text-blue-500 transition-colors duration-200">Pricing</a>
                <button onClick={toggleDarkMode} className="p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200">
                  {isDarkMode ? <Sun className="w-5 h-5" /> : <Moon className="w-5 h-5" />}
                </button>
              </nav>
              <button onClick={toggleMenu} className="md:hidden p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-200">
                {isMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
              </button>
            </div>
            <AnimatePresence>
              {isMenuOpen && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                  className="md:hidden bg-white dark:bg-gray-800"
                >
                  <div className="container mx-auto px-4 py-2 flex flex-col space-y-2">
                    <a href="#features" className="menu-item py-2 hover:text-blue-500 transition-colors duration-200">Features</a>
                    <a href="#demo" className="menu-item py-2 hover:text-blue-500 transition-colors duration-200">Demo</a>
                    <a href="#pricing" className="menu-item py-2 hover:text-blue-500 transition-colors duration-200">Pricing</a>
                    <button onClick={toggleDarkMode} className="menu-item py-2 flex items-center hover:text-blue-500 transition-colors duration-200">
                      {isDarkMode ? <Sun className="w-5 h-5 mr-2" /> : <Moon className="w-5 h-5 mr-2" />}
                      {isDarkMode ? 'Light Mode' : 'Dark Mode'}
                    </button>
                  </div>
                </motion.div>
              )}
            </AnimatePresence>
          </header>

          {/* Hero Section */}
          <section ref={heroRef} className="pt-32 pb-20 md:py-40">
            <div className="container mx-auto px-4 text-center">
              <h1 className="hero-animate text-5xl md:text-7xl font-bold mb-6 bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-500">
                Build Stunning Web Apps
                <br />
                Without Code
              </h1>
              <p className="hero-animate text-xl mb-8">
                Empower your creativity with Moonturtleio's no-code platform
              </p>
              <div className="hero-animate">
                <a
                  href="#demo"
                  className="bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white font-bold py-3 px-8 rounded-full text-lg transition-all duration-200 transform hover:scale-105 inline-block"
                >
                  Try It Now
                </a>
              </div>
            </div>
          </section>

          {/* Features Section */}
          <section id="features" ref={featuresRef} className="py-20 md:py-32 bg-white dark:bg-gray-800 bg-opacity-80 dark:bg-opacity-80 backdrop-blur-lg">
            <div className="container mx-auto px-4">
              <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-500">Key Features</h2>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-12">
                {features.map((feature, index) => (
                  <div
                    key={index}
                    className="feature-card bg-white dark:bg-gray-700 p-8 rounded-xl shadow-lg hover:shadow-2xl transition-shadow duration-300"
                  >
                    <div className="flex items-center mb-6">
                      <div className="bg-gradient-to-r from-blue-500 to-purple-500 p-3 rounded-full mr-4">
                        {feature.icon}
                      </div>
                      <h3 className="text-2xl font-semibold">{feature.title}</h3>
                    </div>
                    <p className="text-lg">{feature.description}</p>
                  </div>
                ))}
              </div>
            </div>
          </section>

          {/* Interactive Demo Section */}
          <section id="demo" ref={demoRef} className="py-20 md:py-32">
            <div className="container mx-auto px-4">
              <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-500">See It in Action</h2>
              <div className="bg-white dark:bg-gray-800 p-8 rounded-xl shadow-lg">
                <div className="flex justify-between items-center mb-8">
                  <h3 className="text-2xl font-semibold">Feature Showcase</h3>
                  <div className="flex space-x-4">
                    <button
                      onClick={() => setIsPlaying(!isPlaying)}
                      className="p-2 rounded-full bg-blue-100 dark:bg-blue-900 hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors duration-200"
                    >
                      {isPlaying ? <Pause className="w-6 h-6" /> : <Play className="w-6 h-6" />}
                    </button>
                    <button
                      onClick={() => setActiveFeature(0)}
                      className="p-2 rounded-full bg-blue-100 dark:bg-blue-900 hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors duration-200"
                    >
                      <RotateCcw className="w-6 h-6" />
                    </button>
                  </div>
                </div>
                <motion.div
                  key={activeFeature}
                  initial={{ opacity: 0, y: 20 }}
                  animate={controls}
                  className="bg-gray-100 dark:bg-gray-700 p-8 rounded-xl"
                >
                  <h4 className="text-2xl font-semibold mb-4">{features[activeFeature].title}</h4>
                  <p className="text-lg">{features[activeFeature].description}</p>
                </motion.div>
                <div className="mt-8 flex justify-center space-x-4">
                  {features.map((_, index) => (
                    <button
                      key={index}
                      onClick={() => setActiveFeature(index)}
                      className={`w-4 h-4 rounded-full transition-colors duration-200 ${
                        index === activeFeature ? 'bg-blue-500' : 'bg-gray-300 dark:bg-gray-600'
                      }`}
                    />
                  ))}
                </div>
              </div>
            </div>
          </section>

          {/* Animated Chart Section */}
          <section className="py-20 md:py-32 bg-white dark:bg-gray-800 bg-opacity-80 dark:bg-opacity-80 backdrop-blur-lg">
            <div className="container mx-auto px-4">
              <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-500">Dynamic Data Visualization</h2>
              <div className="bg-white dark:bg-gray-700 p-8 rounded-xl shadow-lg">
                <Line ref={chartRef} options={chartOptions} data={chartData} />
              </div>
            </div>
          </section>

          {/* Pricing Section */}
          <section id="pricing" ref={pricingRef} className="py-20 md:py-32">
            <div className="container mx-auto px-4">
              <h2 className="text-4xl md:text-5xl font-bold text-center mb-16 bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-500">Choose Your Plan</h2>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                {['Starter', 'Pro', 'Enterprise'].map((plan, index) => (
                  <div
                    key={index}
                    className="pricing-card bg-white dark:bg-gray-700 p-8 rounded-xl shadow-lg hover:shadow-2xl transition-shadow duration-300"
                  >
                    <h3 className="text-2xl font-bold mb-4">{plan}</h3>
                    <p className="text-4xl font-bold mb-6">
                      ${index === 0 ? '0' : index === 1 ? '49' : '99'}
                      <span className="text-sm font-normal">/month</span>
                    </p>
                    <ul className="text-left mb-8 space-y-4">
                      <li className="flex items-center">
                        <ChevronDown className="w-5 h-5 mr-2 text-green-500" />
                        {index === 0 ? '1 Project' : index === 1 ? '10 Projects' : 'Unlimited Projects'}
                      </li>
                      <li className="flex items-center">
                        <ChevronDown className="w-5 h-5 mr-2 text-green-500" />
                        {index === 0 ? 'Basic Templates' : index === 1 ? 'Pro Templates' : 'Custom Templates'}
                      </li>
                      <li className="flex items-center">
                        <ChevronDown className="w-5 h-5 mr-2 text-green-500" />
                        {index === 0 ? 'Community Support' : index === 1 ? 'Priority Support' : '24/7 Dedicated Support'}
                      </li>
                    </ul>
                    <button className="w-full bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white font-bold py-3 px-4 rounded-full transition-all duration-200 transform hover:scale-105">
                      Get Started
                    </button>
                  </div>
                ))}
              </div>
            </div>
          </section>

          {/* Call to Action */}
          <section className="py-20 md:py-32 bg-gradient-to-r from-blue-500 to-purple-500 text-white">
            <div className="container mx-auto px-4 text-center">
              <h2 className="text-4xl md:text-5xl font-bold mb-8">Ready to Build Your Dream App?</h2>
              <p className="text-xl mb-12">Join thousands of creators and launch your web app today!</p>
              <a
                href="#"
                className="bg-white text-blue-500 hover:bg-gray-100 font-bold py-3 px-8 rounded-full text-lg transition-all duration-200 transform hover:scale-105 inline-block"
              >
                Start Free Trial
              </a>
            </div>
          </section>

          {/* Footer */}
          <footer className="bg-gray-900 text-white py-12">
            <div className="container mx-auto px-4">
              <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
                <div>
                  <h3 className="text-lg font-semibold mb-4">Product</h3>
                  <ul className="space-y-2">
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Features</a></li>
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Pricing</a></li>
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Tutorials</a></li>
                  </ul>
                </div>
                <div>
                  <h3 className="text-lg font-semibold mb-4">Company</h3>
                  <ul className="space-y-2">
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">About Us</a></li>
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Careers</a></li>
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Contact</a></li>
                  </ul>
                </div>
                <div>
                  <h3 className="text-lg font-semibold mb-4">Resources</h3>
                  <ul className="space-y-2">
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Blog</a></li>
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Documentation</a></li>
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Community</a></li>
                  </ul>
                </div>
                <div>
                  <h3 className="text-lg font-semibold mb-4">Legal</h3>
                  <ul className="space-y-2">
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Privacy Policy</a></li>
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Terms of Service</a></li>
                    <li><a href="#" className="hover:text-blue-500 transition-colors duration-200">Cookie Policy</a></li>
                  </ul>
                </div>
              </div>
              <div className="mt-12 pt-8 border-t border-gray-800 text-center">
                <p>&copy; 2023 Moonturtleio. All rights reserved.</p>
              </div>
            </div>
          </footer>
        </div>
      </div>
      <style jsx global>{`
        @keyframes float {
          0%, 100% { transform: translateY(0); }
          50% { transform: translateY(-20px); }
        }
      `}</style>
    </div>
  )
}
